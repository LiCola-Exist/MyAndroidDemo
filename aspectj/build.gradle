import com.android.build.gradle.LibraryPlugin
import org.aspectj.bridge.IMessage
import org.aspectj.bridge.MessageHandler
import org.aspectj.tools.ajc.Main


buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.aspectj:aspectjtools:$rootProject.aspectjVersion"
    }
}

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

repositories {
    mavenCentral()
}

android {
    compileSdkVersion rootProject.ext.android["compileSdkVersion"]
    buildToolsVersion rootProject.ext.android["buildSdkVersion"]
    defaultConfig {
        minSdkVersion rootProject.ext.android["minSdkVersion"]
        targetSdkVersion rootProject.ext.android["targetSdkVersion"]
        versionCode 1
        versionName "1.0"

    }

    lintOptions {
        abortOnError false
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility rootProject.ext.sourceCompatibilityVersion
        targetCompatibility rootProject.ext.targetCompatibilityVersion
    }

    android.libraryVariants.all { variant ->
        LibraryPlugin plugin = project.plugins.getPlugin(LibraryPlugin)
        variant.javaCompile.doLast {
            String[] args = ["-showWeaveInfo",
                             "-1.5",
                             "-inpath", javaCompile.destinationDir.toString(),
                             "-aspectpath", javaCompile.classpath.asPath,
                             "-d", javaCompile.destinationDir.toString(),
                             "-classpath", javaCompile.classpath.asPath,
                             "-bootclasspath", project.android.bootClasspath.join(
                    File.pathSeparator)]

            MessageHandler handler = new MessageHandler(true);
            new Main().run(args, handler)

            def log = project.logger
            for (IMessage message : handler.getMessages(null, true)) {
                switch (message.getKind()) {
                    case IMessage.ABORT:
                    case IMessage.ERROR:
                    case IMessage.FAIL:
                        log.error message.message, message.thrown
                        break;
                    case IMessage.WARNING:
                    case IMessage.INFO:
                        log.info message.message, message.thrown
                        break;
                    case IMessage.DEBUG:
                        log.debug message.message, message.thrown
                        break;
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation project(':annotation')

    implementation rootProject.ext.dependencies["aspectjrt"]
    testImplementation rootProject.ext.dependencies["json"]
    //idling需要注入到release版
    implementation rootProject.ext.dependencies["espresso-idling"]

    testImplementation rootProject.ext.dependencies["junit"]
    testImplementation rootProject.ext.dependencies["mockito-core"]
    testImplementation rootProject.ext.dependencies["mockito-inline"]
    testImplementation rootProject.ext.dependencies["hamcrest"]

    androidTestImplementation rootProject.ext.dependencies["mockito-android"]
    androidTestImplementation rootProject.ext.dependencies["mockito-core"]
    androidTestImplementation rootProject.ext.dependencies["runner"]
    androidTestImplementation rootProject.ext.dependencies["rules"]
    androidTestImplementation rootProject.ext.dependencies["junit"]

    androidTestImplementation rootProject.ext.dependencies["espresso-core"]
    androidTestImplementation rootProject.ext.dependencies["espresso-contrib"]
    androidTestImplementation rootProject.ext.dependencies["espresso-intents"]

    //Resolve conflicts between main and test APK:
    androidTestImplementation rootProject.ext.dependencies["support-compat"]
    androidTestImplementation rootProject.ext.dependencies["support-core-utils"]
    androidTestImplementation rootProject.ext.dependencies["support-core-ui"]
    androidTestImplementation rootProject.ext.dependencies["support-media-compat"]
    androidTestImplementation rootProject.ext.dependencies["support-fragment"]
    androidTestImplementation rootProject.ext.dependencies["support-annotations"]
    androidTestImplementation rootProject.ext.dependencies["design"]
    androidTestImplementation rootProject.ext.dependencies["appcompat-v7"]
    androidTestImplementation rootProject.ext.dependencies["recyclerview-v7"]
    androidTestImplementation rootProject.ext.dependencies["cardview-v7"]
    androidTestImplementation rootProject.ext.dependencies["gridlayout-v7"]
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"


}

